#!/usr/bin/env ruby
require 'pry'

require 'bundler/setup'
require 'fluent-icons'

require 'git'
require 'fileutils'
require 'progress_bar'

if Dir.exist?('fluentui-system-icons')
  puts "Theres's already a copy of 'microsoft/fluentui-system-icons'. You should probably remove that first! Skipping.."
else
  puts "Cloning the 'microsoft/fluentui-system-icons' repository. This might take a while.."
  Git.clone('https://github.com/microsoft/fluentui-system-icons.git', 'fluentui-system-icons')
end

@schema = {
  'name'       => 'Fluent UI Icons',
  'icons'      => {},
  'dictionary' => {},

  'errors' => {
    'metadata' => [],
    'icons' => []
  }
}

files = Dir.glob(File.join('fluentui-system-icons', 'assets', '*', '{SVG/*,metadata.json}')).group_by { |file| file.split(File::SEPARATOR)[2] }

groups_pb = ProgressBar.new(files.map(&:first).size)
icons_pb  = ProgressBar.new(files.map(&:last).flatten.size)

files.each do |group, files|
  icon_name = group.split.join('_').downcase

  metadata_file = files.find { |file| file.end_with?('metadata.json') }

  unless (metadata = JSON.parse(File.read(metadata_file)) rescue nil)
    @schema['errors']['metadata'] << icon_name

    # TODO: Build the metadata based on the files in the folder
    #
    metadata = {
      'name'     => group,
      'size'     => [],
      'style'    => [],
      'metaphor' => []
    }
  end

  metadata['label'] = metadata['name']
  metadata['name']  = icon_name
  metadata['icons'] = {}
  metadata['metaphor']&.map!(&:downcase)

  metadata['style'].map(&:downcase).each do |style|
    metadata['icons'][style] = {}

    metadata['size'].each do |size|
      svg_file_path = File.join('fluentui-system-icons', 'assets', group, 'SVG', "ic_fluent_#{icon_name}_#{size}_#{style}.svg")
      # next unless File.exist?(svg_file_path)

      begin
        metadata['icons'][style][size] = File.read(svg_file_path).match(/.*<path([^\/]*)/)[0]
      rescue => e
        @schema['errors']['icons'] << icon_name
        metadata['icons'][style][size] = "<path id='error' icon=#{ icon_name } />"
      end

      icons_pb.increment!
    end
  end

  @schema['icons'][icon_name] = metadata

  metadata['metaphor']&.each { |metaphor| @schema['dictionary'][metaphor] = icon_name }

  groups_pb.increment!
end

if (@schema['errors']['metadata'] || @schema['errors']['icons']).any?
  puts "I couldn't process #{@schema['errors']['metadata'].size} sets, and #{@schema['errors']['icons'].size} icons. This is likely due the metadata file missing, or the icon not being available."
end

File.open('lib/build/data.json', 'w+') do |f|
  f.write(@schema.to_json)
end

if @generate_docs
  puts 'Generating a new Preview file'

  template = File.read('lib/public/fluent-ui-icons.template.html.erb')
  result   = ERB.new(template).result(binding)

  File.open('lib/public/fluent-ui-icons.html', 'w+') do |f|
    f.write(result)
  end

  @docs = true

  template = File.read('lib/public/fluent-ui-icons.template.html.erb')
  result   = ERB.new(template).result(binding)

  File.open('docs/index.html', 'w+') do |f|
    f.write(result)
  end
end

# puts 'Cleaning up'
# FileUtils.rm_rf('fluentui-system-icons') if Dir.exist?('fluentui-system-icons')